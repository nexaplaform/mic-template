name: Release Workflow

on:
  push:
    branches: [ "main" ]

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: üîÑ Checkout c√≥digo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: üìñ Extraer metadata del proyecto
        id: metadata
        run: |
          ARTIFACT_ID=$(grep -m1 '<artifactId>' pom.xml | sed -E 's/.*<artifactId>(.*)<\/artifactId>.*/\1/')
          VERSION=$(grep -m1 '<version>' pom.xml | sed -E 's/.*<version>(.*)<\/version>.*/\1/')
          echo "ARTIFACT_ID=$ARTIFACT_ID" >> $GITHUB_ENV
          echo "CURRENT_VERSION=$VERSION" >> $GITHUB_ENV
          echo "RELEASE_VERSION=${VERSION%-SNAPSHOT}" >> $GITHUB_ENV
          echo "üîç Artifact ID: $ARTIFACT_ID"
          echo "üîç Versi√≥n actual: $VERSION"
          echo "üîñ Versi√≥n release: ${VERSION%-SNAPSHOT}"

      - name: üè∑Ô∏è Calcular pr√≥xima versi√≥n SNAPSHOT
        id: next_version
        run: |
          IFS='.' read -r MAJOR MINOR PATCH <<< "${{ env.RELEASE_VERSION }}"
          NEXT_PATCH=$((PATCH + 1))
          NEXT_VERSION="$MAJOR.$MINOR.$NEXT_PATCH-SNAPSHOT"
          echo "NEXT_VERSION=$NEXT_VERSION" >> $GITHUB_ENV
          echo "üîÅ Pr√≥xima versi√≥n SNAPSHOT: $NEXT_VERSION"

      - name: üìù Actualizar a versi√≥n release
        run: |
          sed -i "s|<version>${{ env.CURRENT_VERSION }}</version>|<version>${{ env.RELEASE_VERSION }}</version>|" pom.xml
          git config user.name "github-actions[bot]"
          git config user.email "github-actions@github.com"
          git commit -am "chore: [release] ${{ env.ARTIFACT_ID }} v${{ env.RELEASE_VERSION }} [skip ci]"
          git push origin main

      - name: üöÄ Publicar en GitHub Packages
        run: mvn deploy -DskipTests --settings settings.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üè∑Ô∏è Crear tag de release
        run: |
          git tag -a "v${{ env.RELEASE_VERSION }}" -m "Release ${{ env.ARTIFACT_ID }} v${{ env.RELEASE_VERSION }}"
          git push origin "v${{ env.RELEASE_VERSION }}"

      - name: üîÑ Preparar pr√≥xima versi√≥n SNAPSHOT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git checkout -b "release/${{ env.RELEASE_VERSION }}"
          sed -i "s|<version>${{ env.RELEASE_VERSION }}</version>|<version>${{ env.NEXT_VERSION }}</version>|" pom.xml
          git config user.name "github-actions[bot]"
          git config user.email "github-actions@github.com"
          git commit -am "chore: [snapshot] ${{ env.ARTIFACT_ID }} ${{ env.NEXT_VERSION }} [skip ci]"
          git push origin "release/${{ env.RELEASE_VERSION }}"

          gh pr create \
            --base develop \
            --head "release/${{ env.RELEASE_VERSION }}" \
            --title "chore: Bump ${{ env.ARTIFACT_ID }} to ${{ env.NEXT_VERSION }}" \
            --body "Actualizaci√≥n autom√°tica post-release:\n\n- Artifact: ${{ env.ARTIFACT_ID }}\n- Versi√≥n release: ${{ env.RELEASE_VERSION }}\n- Nueva versi√≥n SNAPSHOT: ${{ env.NEXT_VERSION }}"
